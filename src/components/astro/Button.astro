---
import type { AstroComponentFactory } from "astro/runtime/server/index.js"
import { cleanClass } from "@/utils/cleanClass"

interface Props {
	type?: "primary" | "secondary"
	variant?: "solid" | "outline" | "dashed" | "filled" | "text" | "link"
	href?: string
	icon?: AstroComponentFactory
	download?: string
	className?: string
	disabled?: boolean
	htmlType?: "button" | "submit" | "reset"
}

const {
	type = "primary",
	href,
	icon: Icon,
	download,
	variant = "solid",
	className = "",
	disabled,
	htmlType = "button",
} = Astro.props

const hasSlot = Astro.slots.has("default")
const isExternal = href?.startsWith("http")
const Component = href ? "a" : "button"
const attributes = isExternal
	? { target: "_blank", rel: "noopener noreferrer", href: href }
	: { href: href }
---

<Component
	class={cleanClass("button", className, type, variant, !hasSlot && "only-icon")}
	disabled={disabled}
	download={download}
	type={htmlType}
	{...attributes}
>
	{hasSlot && <slot />}
	{Icon && <Icon />}
</Component>

<style>
	a,
	button {
		text-decoration: none;
		height: 44px;
		padding-inline: 1.5rem;
		border-radius: 3rem;
		border: none;
		font-size: 14px;
		font-weight: 600;
		cursor: pointer;
		display: flex;
		gap: 0.5rem;
		align-items: center;
		justify-content: center;
		color: #18181b;
		width: fit-content;

		&:disabled {
			cursor: not-allowed;
			opacity: 0.5;
		}
	}

	.secondary {
		background-color: var(--white-color);
		border: 1px solid var(--gray-color-300);

		&:hover {
			color: var(--primary-color-600);
			border: 1px solid var(--primary-color-600);
		}

		&:disabled {
			color: var(--background-color);
			border: 1px solid var(--gray-color-300);
		}
	}

	.primary {
		background-color: var(--primary-color-600);
		color: var(--white-color);

		&:hover {
			background-color: var(--primary-color-700);
		}
	}

	.text {
		background-color: transparent;

		&:hover {
			background-color: var(--gray-color-50);
		}
	}

	.only-icon {
		padding-inline: 0px !important;
		width: 44px;
		height: 44px;
		aspect-ratio: 1 / 1;
		justify-content: center;
	}
</style>
