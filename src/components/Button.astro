---
import type { AstroComponentFactory } from "astro/runtime/server/index.js"

interface Props {
	type?: "primary" | "default" | "dashed" | "text" | "link"
	variant?: "solid" | "outline" | "dashed" | "filled" | "text" | "link"
	href?: string
	icon?: AstroComponentFactory
	download?: boolean
}

const {
	type = "default",
	href,
	icon: Icon,
	download,
	variant = "solid",
} = Astro.props

const hasSlot = Astro.slots.has("default")

const isExternal = /^https?:\/\//.test(href ?? "")

const attrs = {
	target: isExternal ? "_blank" : undefined,
	rel: isExternal ? "noopener noreferrer" : undefined,
}
---

<>
	{
		!href && (
			<button class={`button ${type} ${variant} ${hasSlot ? "" : "only-icon"}`}>
				{Icon && <Icon />}
				<slot />
			</button>
		)
	}
	{
		href && (
			<a
				href={href}
				class={`button ${type} ${variant} ${hasSlot ? "" : "only-icon"}`}
				download={download}
				{...attrs}
			>
				{Icon && <Icon />}
				<slot />
			</a>
		)
	}
</>

<style>
	a {
		text-decoration: none;
		height: 44px;
		display: flex;
		width: fit-content;
		align-items: center;
		color: #18181b;
	}

	.button {
		height: 44px;
		padding-inline: 1.5rem;
		border-radius: 3rem;
		border: none;
		font-size: 14px;
		font-weight: 600;
		cursor: pointer;
		display: flex;
		gap: 1rem;
		align-items: center;
		color: #18181b;

		&:focus,
		&:focus-visible {
			outline: 5px solid rgba(143, 143, 150, 0.3);
			outline-offset: 0;
		}
	}

	.default {
		background-color: white;
		border: 1px solid #e4e4e7;

		&:hover {
			background-color: #fafafa;
		}
	}

	.primary {
		background-color: var(--primary-color);
		color: white;

		&:hover {
			background-color: #18181bfe;
		}
	}

	.text {
		background-color: transparent;

		&:hover {
			background-color: #f4f4f5;
		}
	}

	.only-icon {
		padding-inline: 0px !important;
		width: 44px;
		height: 44px;
		aspect-ratio: 1 / 1;
		justify-content: center;
	}
</style>
